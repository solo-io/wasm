build --cxxopt=-std=c++17
build --cxxopt=-O3
build --cxxopt=-no-canonical-prefixes
build --cxxopt=-DEMSCRIPTEN_PROTOBUF_LITE=1

# try to optimize un-used code
build --cxxopt=-fdata-sections
build --cxxopt=-ffunction-sections

build --linkopt=-Wl,--gc-sections

# https://github.com/bazelbuild/bazel/issues/9451
# ideally we want this, but it doesn't work...
# build --cxxopt=-fno-canonical-system-headers
# as a work around we use `sed` to "fix" the *.d files.

build --crosstool_top=//toolchain:emscripten

# Use --cpu as a differentiator.
build --cpu=wasm

# Use the default Bazel C++ toolchain to build the tools used during the
# build.

build --host_crosstool_top=@bazel_tools//tools/cpp:toolchain