name: pull_request

on:
  push:
    paths:
    - "tools/wasme/**" 
    branches:
    - 'master'
  pull_request:
    paths:
    - "tools/wasme/**" 
jobs:
  codegen:
    name: codegen check
    runs-on: ubuntu-18.04
    steps:
    - name: Cancel Previous Actions
      uses: styfle/cancel-workflow-action@0.4.1
      with:
        access_token: ${{ github.token }}
    - name: Set up Go 1.14
      uses: actions/setup-go@v1
      with:
        go-version: 1.14
      id: go
    - name: Install Protoc
      uses: solo-io/setup-protoc@master
      with:
        version: '3.6.1'
    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - uses: actions/cache@v2
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - name: Generate Code
      run: |
        cd ./tools/wasme/cli
        ./ci/check-code-and-docs-gen.sh
  test:
    name: end-to-end
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: Set up Go 1.15
      uses: actions/setup-go@v2
      with:
        go-version: '1.15.2'
    - uses: engineerd/setup-kind@v0.5.0
      with:
        skipClusterCreation: "true"
    - name: Install Protoc
      uses: solo-io/setup-protoc@master
      with:
        version: '3.6.1'
    - uses: azure/setup-kubectl@v1
      id: kubectl
      with:
        version: 'v1.18.0'
    - uses: actions/cache@v1
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - name: Setup env
      env:
        KUBECTL: ${{ steps.kubectl.outputs.kubectl-path }}
      working-directory: ./tools/wasme/cli
      run: |
        curl -sSL https://get.helm.sh/helm-v3.2.0-linux-amd64.tar.gz | tar -xzf - linux-amd64/helm
        export PATH=$PWD/linux-amd64:$(dirname $KUBECTL):$PATH
        make install-deps operator-gen generated-code
        ./ci/setup-kind.sh
    - name: Testing
      env:
        KUBECTL: ${{ steps.kubectl.outputs.kubectl-path }}
      working-directory: ./tools/wasme/cli
      run: |
        export PATH=$(dirname $KUBECTL):$PATH
        export FILTER_IMAGE_GLOO_TAG=webassemblyhub.io/sodman/example-filter:v0.3
        export FILTER_BUILD_IMAGE_TAG=localhost:5000/test:v1
        export SKIP_PACKAGES=istio,operator
        make install-deps run-tests
    - name: Debug Info
      if: failure()
      env:
        KUBECTL: ${{ steps.kubectl.outputs.kubectl-path }}
      run: |
        # see what's in the cluster if we failed
        kubectl get all -A
        kubectl get configmaps -A
  e2e-istio:
    name: end-to-end-istio
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: false
      matrix:
        istio-version: [
          '1.5.1',
          '1.6.6',
          '1.7.1',
          '1.8.0-alpha.0'
        ]
        include:
          - istio-version: '1.5.1'
            istio-binary: 'https://github.com/istio/istio/releases/download/1.5.1/istio-1.5.1-linux.tar.gz'
            istio-filter-image: 'webassemblyhub.io/ilackarms/assemblyscript-test:istio-1.5'
          - istio-version: '1.6.6'
            istio-binary: 'https://github.com/istio/istio/releases/download/1.6.6/istio-1.6.6-linux-amd64.tar.gz'
            istio-filter-image: 'webassemblyhub.io/ilackarms/assemblyscript-test:istio-1.5'
          - istio-version: '1.7.1'
            istio-binary: 'https://github.com/istio/istio/releases/download/1.7.1/istio-1.7.1-linux-amd64.tar.gz'
            istio-filter-image: 'webassemblyhub.io/sodman/istio-1-7:v0.3'
          - istio-version: '1.8.0-alpha.0'
            istio-binary: 'https://github.com/istio/istio/releases/download/1.8.0-alpha.0/istio-1.8.0-alpha.0-linux-amd64.tar.gz'
            istio-filter-image: 'webassemblyhub.io/sodman/istio-1-7:v0.3'
    steps:
    - uses: actions/checkout@v2
    - name: Set up Go 1.15
      uses: actions/setup-go@v2
      with:
        go-version: '1.15.2'
    - uses: engineerd/setup-kind@v0.5.0
      with:
        skipClusterCreation: "true"
    - name: Install Protoc
      uses: solo-io/setup-protoc@master
      with:
        version: '3.6.1'
    - uses: azure/setup-kubectl@v1
      id: kubectl
      with:
        version: 'v1.18.0'
    - uses: actions/cache@v1
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - name: Setup env
      env:
        KUBECTL: ${{ steps.kubectl.outputs.kubectl-path }}
        ISTIO_VERSION: ${{ matrix.istio-version }}
      working-directory: ./tools/wasme/cli
      run: |
        curl -sSL https://get.helm.sh/helm-v3.2.0-linux-amd64.tar.gz | tar -xzf - linux-amd64/helm
        curl -sSL ${{ matrix.istio-binary }} | tar -xzf - istio-${{ matrix.istio-version }}/bin/istioctl
        export PATH=$PWD/istio-${{ matrix.istio-version }}/bin:$PWD/linux-amd64:$(dirname $KUBECTL):$PATH
        make install-deps operator-gen generated-code
        ./ci/setup-kind-istio.sh
    - name: Testing
      env:
        KUBECTL: ${{ steps.kubectl.outputs.kubectl-path }}
      working-directory: ./tools/wasme/cli
      run: |
        export PATH=$(dirname $KUBECTL):$PATH
        export FILTER_IMAGE_ISTIO_TAG=${{ matrix.istio-filter-image }}
        export ISTIO_VERSION=${{ matrix.istio-version }}
        export TEST_PKG=pkg/deploy/istio/
        make install-deps run-tests
        export TEST_PKG=test/e2e/operator/
        make install-deps run-tests
    - name: Debug Info
      if: failure()
      env:
        KUBECTL: ${{ steps.kubectl.outputs.kubectl-path }}
      run: |
        # see what's in the cluster if we failed
        git diff
        kubectl get all -A
        kubectl get configmaps -A
