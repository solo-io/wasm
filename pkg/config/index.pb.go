// Code generated by protoc-gen-go. DO NOT EDIT.
// source: index.proto

package config

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Root struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	SchemaSha256         string   `protobuf:"bytes,2,opt,name=schema_sha256,json=schemaSha256,proto3" json:"schema_sha256,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Root) Reset()         { *m = Root{} }
func (m *Root) String() string { return proto.CompactTextString(m) }
func (*Root) ProtoMessage()    {}
func (*Root) Descriptor() ([]byte, []int) {
	return fileDescriptor_f750e0f7889345b5, []int{0}
}

func (m *Root) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Root.Unmarshal(m, b)
}
func (m *Root) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Root.Marshal(b, m, deterministic)
}
func (m *Root) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Root.Merge(m, src)
}
func (m *Root) XXX_Size() int {
	return xxx_messageInfo_Root.Size(m)
}
func (m *Root) XXX_DiscardUnknown() {
	xxx_messageInfo_Root.DiscardUnknown(m)
}

var xxx_messageInfo_Root proto.InternalMessageInfo

func (m *Root) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Root) GetSchemaSha256() string {
	if m != nil {
		return m.SchemaSha256
	}
	return ""
}

type Config struct {
	CodeSha256           string   `protobuf:"bytes,1,opt,name=code_sha256,json=codeSha256,proto3" json:"code_sha256,omitempty"`
	Roots                []*Root  `protobuf:"bytes,2,rep,name=roots,proto3" json:"roots,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Config) Reset()         { *m = Config{} }
func (m *Config) String() string { return proto.CompactTextString(m) }
func (*Config) ProtoMessage()    {}
func (*Config) Descriptor() ([]byte, []int) {
	return fileDescriptor_f750e0f7889345b5, []int{1}
}

func (m *Config) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Config.Unmarshal(m, b)
}
func (m *Config) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Config.Marshal(b, m, deterministic)
}
func (m *Config) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Config.Merge(m, src)
}
func (m *Config) XXX_Size() int {
	return xxx_messageInfo_Config.Size(m)
}
func (m *Config) XXX_DiscardUnknown() {
	xxx_messageInfo_Config.DiscardUnknown(m)
}

var xxx_messageInfo_Config proto.InternalMessageInfo

func (m *Config) GetCodeSha256() string {
	if m != nil {
		return m.CodeSha256
	}
	return ""
}

func (m *Config) GetRoots() []*Root {
	if m != nil {
		return m.Roots
	}
	return nil
}

func init() {
	proto.RegisterType((*Root)(nil), "solo.extendenvoy.config.Root")
	proto.RegisterType((*Config)(nil), "solo.extendenvoy.config.Config")
}

func init() { proto.RegisterFile("index.proto", fileDescriptor_f750e0f7889345b5) }

var fileDescriptor_f750e0f7889345b5 = []byte{
	// 175 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xce, 0xcc, 0x4b, 0x49,
	0xad, 0xd0, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x12, 0x2f, 0xce, 0xcf, 0xc9, 0xd7, 0x4b, 0xad,
	0x28, 0x49, 0xcd, 0x4b, 0x49, 0xcd, 0x2b, 0xcb, 0xaf, 0xd4, 0x4b, 0xce, 0xcf, 0x4b, 0xcb, 0x4c,
	0x57, 0xb2, 0xe6, 0x62, 0x09, 0xca, 0xcf, 0x2f, 0x11, 0xe2, 0xe3, 0x62, 0xca, 0x4c, 0x91, 0x60,
	0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x62, 0xca, 0x4c, 0x11, 0x52, 0xe6, 0xe2, 0x2d, 0x4e, 0xce, 0x48,
	0xcd, 0x4d, 0x8c, 0x2f, 0xce, 0x48, 0x34, 0x32, 0x35, 0x93, 0x60, 0x02, 0x4b, 0xf1, 0x40, 0x04,
	0x83, 0xc1, 0x62, 0x4a, 0x71, 0x5c, 0x6c, 0xce, 0x60, 0x63, 0x84, 0xe4, 0xb9, 0xb8, 0x93, 0xf3,
	0x53, 0x52, 0x61, 0x8a, 0x21, 0xe6, 0x70, 0x81, 0x84, 0x20, 0x4a, 0x85, 0x8c, 0xb9, 0x58, 0x8b,
	0xf2, 0xf3, 0x4b, 0x8a, 0x25, 0x98, 0x14, 0x98, 0x35, 0xb8, 0x8d, 0x64, 0xf5, 0x70, 0x38, 0x48,
	0x0f, 0xe4, 0x9a, 0x20, 0x88, 0x5a, 0x27, 0x8e, 0x28, 0x36, 0x88, 0x68, 0x12, 0x1b, 0xd8, 0x1b,
	0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0xdb, 0xcd, 0x84, 0x9f, 0xd5, 0x00, 0x00, 0x00,
}
